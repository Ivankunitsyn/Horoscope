import telebot
import random
import openai
import os
from datetime import datetime

class HoroscopeBot:
    def __init__(self):
        self.TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
        self.OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
        
        self.zodiac_signs = [
            "–û–≤–µ–Ω", "–¢–µ–ª–µ—Ü", "–ë–ª–∏–∑–Ω–µ—Ü—ã", "–†–∞–∫", "–õ–µ–≤", "–î–µ–≤–∞",
            "–í–µ—Å—ã", "–°–∫–æ—Ä–ø–∏–æ–Ω", "–°—Ç—Ä–µ–ª–µ—Ü", "–ö–æ–∑–µ—Ä–æ–≥", "–í–æ–¥–æ–ª–µ–π", "–†—ã–±—ã"
        ]
        
        if not self.TOKEN:
            print("TELEGRAM_BOT_TOKEN not found in environment variables!")
            return
            
        self.bot = telebot.TeleBot(self.TOKEN)
        
        if self.OPENAI_API_KEY:
            openai.api_key = self.OPENAI_API_KEY
        else:
            print("OPENAI_API_KEY not found in environment variables!")

        self.register_handlers()
        
    def register_handlers(self):
        @self.bot.message_handler(commands=['start'])
        def send_welcome(message):
            self.bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=self.main_menu())

        @self.bot.message_handler(commands=['help'])
        def send_help(message):
            self.bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞, –∏ —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –≥–æ—Ä–æ—Å–∫–æ–ø!")
            self.send_zodiac_keyboard(message.chat.id)

        @self.bot.message_handler(func=lambda message: message.text in self.zodiac_signs)
        def send_horoscope(message):
            sign = message.text
            horoscope = self.generate_ai_horoscope(sign)
            self.bot.send_message(message.chat.id, f"–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign}:\n{horoscope}")

    def main_menu(self):
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = telebot.types.KeyboardButton("üîÆ –û–±—ã—á–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø")
        btn2 = telebot.types.KeyboardButton("üåô –õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å")
        btn3 = telebot.types.KeyboardButton("üíû –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∑–Ω–∞–∫–æ–≤")
        keyboard.add(btn1, btn2, btn3)
        return keyboard

    def generate_ai_horoscope(self, sign):
        if not self.OPENAI_API_KEY:
            return random.choice(["–°–µ–≥–æ–¥–Ω—è —É–¥–∞—á–Ω—ã–π –¥–µ–Ω—å!", "–ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã —Å –¥–µ–Ω—å–≥–∞–º–∏.", "–û—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π."])
        
        prompt = f"–°–æ–∑–¥–∞–π –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ {sign} –Ω–∞ —Å–µ–≥–æ–¥–Ω—è."
        try:
            response = openai.ChatCompletion.create(
                model="gpt-4",
                messages=[{"role": "system", "content": prompt}]
            )
            return response["choices"][0]["message"]["content"]
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ OpenAI: {e}")
            return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    def run(self):
        if hasattr(self, 'bot'):
            print("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
            try:
                self.bot.polling(none_stop=True)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        else:
            print("–ë–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")  
from bot import HoroscopeBot

if __name__ == "__main__":
    bot = HoroscopeBot()
    bot.run()
pyTelegramBotAPI
openai
